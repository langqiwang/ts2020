<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.esst.ts.dao.examUserMapper" >
  <resultMap id="BaseResultMap" type="com.esst.ts.model.examUser" >
    <id column="ExamUserID" property="examuserid" jdbcType="INTEGER" />
    <result column="EU_ExamID" property="euExamid" jdbcType="INTEGER" />
    <result column="EU_Type" property="euType" jdbcType="INTEGER" />
    <result column="EU_UserID" property="euUserid" jdbcType="INTEGER" />
    <result column="EU_DeptID" property="euDeptid" jdbcType="INTEGER" />
    <result column="EU_PostID" property="euPostid" jdbcType="INTEGER" />
    <result column="EU_GradeID" property="euGradeid" jdbcType="INTEGER" />
    <result column="EU_Customer_Userid" property="euCustomerUserid" jdbcType="VARCHAR" />
    <result column="EU_Customer_Dogid" property="euCustomerDogid" jdbcType="INTEGER" />
    <result column="EU_RelationExamID" property="euRelationexamid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ExamUserID, EU_ExamID, EU_Type, EU_UserID, EU_DeptID, EU_PostID, EU_GradeID, EU_Customer_Userid, 
    EU_Customer_Dogid, EU_RelationExamID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_user
    where ExamUserID = #{examuserid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_user
    where ExamUserID = #{examuserid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.esst.ts.model.examUser" >
    insert into exam_user (ExamUserID, EU_ExamID, EU_Type, 
      EU_UserID, EU_DeptID, EU_PostID, 
      EU_GradeID, EU_Customer_Userid, EU_Customer_Dogid, 
      EU_RelationExamID)
    values (#{examuserid,jdbcType=INTEGER}, #{euExamid,jdbcType=INTEGER}, #{euType,jdbcType=INTEGER}, 
      #{euUserid,jdbcType=INTEGER}, #{euDeptid,jdbcType=INTEGER}, #{euPostid,jdbcType=INTEGER}, 
      #{euGradeid,jdbcType=INTEGER}, #{euCustomerUserid,jdbcType=VARCHAR}, #{euCustomerDogid,jdbcType=INTEGER}, 
      #{euRelationexamid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.esst.ts.model.examUser" >
    insert into exam_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examuserid != null" >
        ExamUserID,
      </if>
      <if test="euExamid != null" >
        EU_ExamID,
      </if>
      <if test="euType != null" >
        EU_Type,
      </if>
      <if test="euUserid != null" >
        EU_UserID,
      </if>
      <if test="euDeptid != null" >
        EU_DeptID,
      </if>
      <if test="euPostid != null" >
        EU_PostID,
      </if>
      <if test="euGradeid != null" >
        EU_GradeID,
      </if>
      <if test="euCustomerUserid != null" >
        EU_Customer_Userid,
      </if>
      <if test="euCustomerDogid != null" >
        EU_Customer_Dogid,
      </if>
      <if test="euRelationexamid != null" >
        EU_RelationExamID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examuserid != null" >
        #{examuserid,jdbcType=INTEGER},
      </if>
      <if test="euExamid != null" >
        #{euExamid,jdbcType=INTEGER},
      </if>
      <if test="euType != null" >
        #{euType,jdbcType=INTEGER},
      </if>
      <if test="euUserid != null" >
        #{euUserid,jdbcType=INTEGER},
      </if>
      <if test="euDeptid != null" >
        #{euDeptid,jdbcType=INTEGER},
      </if>
      <if test="euPostid != null" >
        #{euPostid,jdbcType=INTEGER},
      </if>
      <if test="euGradeid != null" >
        #{euGradeid,jdbcType=INTEGER},
      </if>
      <if test="euCustomerUserid != null" >
        #{euCustomerUserid,jdbcType=VARCHAR},
      </if>
      <if test="euCustomerDogid != null" >
        #{euCustomerDogid,jdbcType=INTEGER},
      </if>
      <if test="euRelationexamid != null" >
        #{euRelationexamid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.esst.ts.model.examUser" >
    update exam_user
    <set >
      <if test="euExamid != null" >
        EU_ExamID = #{euExamid,jdbcType=INTEGER},
      </if>
      <if test="euType != null" >
        EU_Type = #{euType,jdbcType=INTEGER},
      </if>
      <if test="euUserid != null" >
        EU_UserID = #{euUserid,jdbcType=INTEGER},
      </if>
      <if test="euDeptid != null" >
        EU_DeptID = #{euDeptid,jdbcType=INTEGER},
      </if>
      <if test="euPostid != null" >
        EU_PostID = #{euPostid,jdbcType=INTEGER},
      </if>
      <if test="euGradeid != null" >
        EU_GradeID = #{euGradeid,jdbcType=INTEGER},
      </if>
      <if test="euCustomerUserid != null" >
        EU_Customer_Userid = #{euCustomerUserid,jdbcType=VARCHAR},
      </if>
      <if test="euCustomerDogid != null" >
        EU_Customer_Dogid = #{euCustomerDogid,jdbcType=INTEGER},
      </if>
      <if test="euRelationexamid != null" >
        EU_RelationExamID = #{euRelationexamid,jdbcType=INTEGER},
      </if>
    </set>
    where ExamUserID = #{examuserid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.esst.ts.model.examUser" >
    update exam_user
    set EU_ExamID = #{euExamid,jdbcType=INTEGER},
      EU_Type = #{euType,jdbcType=INTEGER},
      EU_UserID = #{euUserid,jdbcType=INTEGER},
      EU_DeptID = #{euDeptid,jdbcType=INTEGER},
      EU_PostID = #{euPostid,jdbcType=INTEGER},
      EU_GradeID = #{euGradeid,jdbcType=INTEGER},
      EU_Customer_Userid = #{euCustomerUserid,jdbcType=VARCHAR},
      EU_Customer_Dogid = #{euCustomerDogid,jdbcType=INTEGER},
      EU_RelationExamID = #{euRelationexamid,jdbcType=INTEGER}
    where ExamUserID = #{examuserid,jdbcType=INTEGER}
  </update>
</mapper>